# English Assistant Frontend Dockerfile
FROM node:18-alpine AS builder

# Set work directory
WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY frontend/ .

# Build TailwindCSS
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy custom nginx config
COPY deployment/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built frontend files
COPY --from=builder /app /usr/share/nginx/html

# Remove unnecessary files
RUN rm -f /usr/share/nginx/html/package*.json \
    /usr/share/nginx/html/tailwind.config.js \
    /usr/share/nginx/html/serve.py \
    /usr/share/nginx/html/test_frontend.py

# Create non-root user
RUN addgroup -g 1001 -S nginx && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx

# Set ownership
RUN chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/run /var/log/nginx

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]